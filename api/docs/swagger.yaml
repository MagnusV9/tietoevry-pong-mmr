definitions:
  Employee:
    description: Employee account information
    properties:
      department:
        type: string
      elo:
        type: integer
      email:
        type: string
      games:
        items:
          $ref: '#/definitions/Game'
        type: array
      name:
        type: string
      password:
        type: string
    required:
    - department
    - elo
    - email
    - name
    - password
    type: object
  Game:
    description: Game information between an employee and an user
    properties:
      player1ID:
        type: string
      player1Score:
        $ref: '#/definitions/Score'
      player2ID:
        type: string
      player2Score:
        $ref: '#/definitions/Score'
    type: object
  LoginRequest:
    description: Login request with email and password
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  Score:
    description: Score information between an employee and an user
    properties:
      score:
        type: integer
    type: object
  Tournament:
    description: Tournament account information
    properties:
      games:
        items:
          $ref: '#/definitions/Game'
        type: array
    type: object
  UpdateEmployee:
    description: UpdateEmployee account information
    properties:
      department:
        type: string
      elo:
        type: integer
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
  title: tietoevry-pong-mmr
  version: "0.1"
paths:
  /api/employees:
    get:
      description: Get all employees
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Employee'
            type: array
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get all employees
      tags:
      - Employee
    post:
      description: Create a new employee
      parameters:
      - description: Employee object
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/Employee'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Employee'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      summary: Create a new employee
      tags:
      - Employee
  /api/employees/{id}:
    delete:
      description: Delete an employee by its ID
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Delete an employee by ID
      tags:
      - Employee
    get:
      description: Get an employee by its ID
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Employee'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get an employee by ID
      tags:
      - Employee
    put:
      consumes:
      - application/json
      description: Update an existing employee by its ID
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      - description: UpdateEmployee object
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/UpdateEmployee'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      summary: Update an existing employee
      tags:
      - Employee
  /api/games:
    get:
      description: Get all games
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Game'
            type: array
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get all games
      tags:
      - Game
    post:
      description: Create a new game
      parameters:
      - description: Game object
        in: body
        name: game
        required: true
        schema:
          $ref: '#/definitions/Game'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Game'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      summary: Create a new game
      tags:
      - Game
  /api/games/{id}:
    delete:
      description: Delete an game by its ID
      parameters:
      - description: Game ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Delete an game by ID
      tags:
      - Game
    get:
      description: Get an game by its ID
      parameters:
      - description: Game ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Game'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get an game by ID
      tags:
      - Game
  /api/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token
      parameters:
      - description: Login Request
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Login
      tags:
      - Auth
  /api/tournaments:
    get:
      description: Get all tournaments
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Tournament'
            type: array
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get all tournaments
      tags:
      - Tournament
    post:
      description: Create a new tournament
      parameters:
      - description: Tournament object
        in: body
        name: tournament
        required: true
        schema:
          $ref: '#/definitions/Tournament'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Tournament'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      summary: Create a new tournament
      tags:
      - Tournament
  /api/tournaments/{id}:
    delete:
      description: Delete a tournament
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Delete a tournament
      tags:
      - Tournament
    get:
      description: Get a tournament by its ID
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Tournament'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get a tournament by ID
      tags:
      - Tournament
    put:
      description: Update a tournament
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: integer
      - description: Tournament object
        in: body
        name: tournament
        required: true
        schema:
          $ref: '#/definitions/Tournament'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Tournament'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Update a tournament
      tags:
      - Tournament
swagger: "2.0"
